//noinspection GradleCompatible
//noinspection GradleCompatible
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.assessment.deliverybaseproject"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.assessment.deliverybaseproject.main.MockTestRunner"
        buildConfigField "String", "BASE_URL", baseUrl
        buildConfigField "float", "ZOOM_LEVEL", zoomLevel
        buildConfigField "String", "DB_NAME", databaseName
        buildConfigField "int", "NETWORK_PAGE_SIZE", networkPageSize
        buildConfigField "int", "DATABASE_PAGE_SIZE", databasePageSize
        buildConfigField "int", "PREFETCH_DISTANCE_NUM", prefetchDistanceNum
        resValue "string", "google_android_map_api_key", mapApiKey
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        pickFirst 'mockito-extensions/org.mockito.plugins.MockMaker'
        exclude 'LICENSE.txt'
    }
    // Gradle automatically adds 'android.test.runner' as a dependency.
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

jacoco {
    toolVersion '0.7.6.201602180812'
}

def kotlin_version = '1.3.10'
def retrofit_version = '2.4.0'
def dagger2_version = '2.16'
def hamcrestVersion = '1.3'
def mockito_version = '2.8.9'
def mockito_kotlin_version = '1.5.0'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.media:media:1.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    // Room
    implementation 'androidx.room:room-runtime:2.1.0'
    kapt 'androidx.room:room-compiler:2.1.0'
    kapt "android.arch.persistence.room:compiler:1.1.1"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Dagger
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger2_version"

    // Rx
    compileOnly "org.glassfish:javax.annotation:3.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    // Paging
    implementation 'androidx.paging:paging-runtime:2.1.0'
    implementation "android.arch.paging:rxjava2:1.0.1"

    //noinspection GradleDependency
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.jraska.livedata:testing-ktx:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-core:2.0.0'

    configurations.all { resolutionStrategy { force 'org.objenesis:objenesis:2.6', 'org.mockito:mockito-core:2.19.0' } }

    //noinspection GradleDependency
    kapt "com.google.dagger:dagger-android-processor:2.16"

    //androidTest
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.2'
    implementation 'com.squareup.okhttp3:mockwebserver:3.14.2'
    implementation "androidx.arch.core:core-testing:2.0.1"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0-alpha01'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    //test
    testImplementation 'androidx.test:runner:1.2.0'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.robolectric:robolectric:4.3"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"
}
